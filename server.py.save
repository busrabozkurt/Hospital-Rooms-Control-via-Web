import http.server,socketserver,logging,serial
from io import BytesIO
import numpy as np
loginsuccess=False

  print("f"+str+"f")
        return 

def oku():
    rstr=""
    data = np.genfromtxt("data"+".txt", delimiter='/n',dtype=np.uint8)
    for x in range(0,len(data)): 
        rstr+= "<LED>"+str(data[x])+"</LED>"+"\r\n"   
    data = "<?xml version='1.0' encoding='utf-8'?>"+"<input>"+"\r\n"+ rstr +"<sfr>veli</sfr>"+"\r\n"+"</input>" 
    return data
def yaz(gelen): 
    dene="0"*100
    file = open("data.txt","w")
    for x in range(0,len(gelen)):
        dene[x]=gelen[x]
        file.write(str(gelen[x])+"\n")
    ser0= serial.Serial('/dev/ttyUSB0', 9600, timeout=1)
    ser1= serial.Serial('/dev/ttyUSB1', 9600, timeout=1)
    ser0.flush()
    ser1.flush()
    ser0.write(dene.encode()+b'\n')
    ser1.write(dene.encode()+b'\n')

class MyHttpRequestHandler(http.server.SimpleHTTPRequestHandler):
   
    def _set_response(self):
        self.send_response(200)
        self.send_header('Content-type', 'text/html')
        self.end_headers()

    def do_GET(self):
        
        if self.path == '/index.htm':
            self.path = 'index.htm'
        if (self.path == '/izosayfa.htm') and loginsuccess:
            print("geldigeldi"+loginsuccess)
            self.path = 'izosayfa.htm'

        #response.write(body)
        #if(yol=="izogonder")
        arduinogonder(self.path)

        return http.server.SimpleHTTPRequestHandler.do_GET(self)
    def do_POST(self):
        content_length = int(self.headers['Content-Length']) # <--- Gets the size of data
        body = self.rfile.read(content_length)
       # yol=self.path.split('/')
        self.send_response(200)
        self.end_headers()
        response = BytesIO()
        print("post a girdi") 
        sfr = body.decode().split("sifre=")[1].split('/')[0]
        print('sfr:'+sfr)
        if sfr == "izo123":
          
            response.write(b'success')
            self.wfile.write(response.getvalue())
            print(response.getvalue().decode())

        if sfr == "dataal":
            print("xml gonderiyor")
            dene=oku().encode()
            print(oku())
            response.write(dene)
            #response.write(body)
            self.wfile.write(response.getvalue())
            #self.wfile.write("POST request for {}".format(self.path).encode('utf-8'))
        if sfr == "guncelle":
            print("kontrol edilecek")
            gelen= body.decode().split("guncelle/")[1].split('/')[0]
            print(gelen[0])
            print(gelen[1])
            print(type(gelen))
            yaz(gelen)
            
            response.write(b'iso')
            self.wfile.write(response.getvalue())
# Create an object of the above class
handler_object = MyHttpRequestHandler
PORT = 80
IP ="0.0.0.0"
my_server = socketserver.TCPServer((IP, PORT), handler_object)
# Star the server

try:
    print(PORT)
    my_server.serve_forever()
    
except Exception:
    my_server.server_close()
my_server.server_close()
